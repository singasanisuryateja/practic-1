/*
 * mvn generated by tentackle-project-archetype.
 */

package flipkart.server;

import flipkart.common.Constants;
import flipkart.common.mvnHelper;
import flipkart.pdo.md.User;
import flipkart.pdo.md.UserGroup;
import flipkart.pdo.td.Message;
import org.testng.annotations.Test;

import org.tentackle.log.Logger;
import org.tentackle.ns.pdo.NumberPool;
import org.tentackle.ns.pdo.NumberRange;
import org.tentackle.test.pdo.AbstractPdoTest;


/**
 * Fill database with test data.
 */
public class FillDatabase extends AbstractPdoTest {

  private static final Logger LOGGER = Logger.get(FillDatabase.class);

  public FillDatabase() {
    super(TransactionType.CLASS, true);   // commit!
  }


  @Test(groups = { TestConstants.GROUP_INITDB })
  public void setupPools() {
    NumberPool pool = on(NumberPool.class);
    pool.setRealm(Constants.POOL_REALM);
    pool.setName(Message.POOL_NAME);
    pool.setDescription("pool for message numbers");
    pool.setOnline(true);

    NumberRange range = on(NumberRange.class);
    range.setBegin(1000000);
    range.setEnd  (9999999);
    pool.getNumberRangeList().add(range);

    pool.save();

    LOGGER.info("pool {0} created", pool);
  }

  @Test(groups = { TestConstants.GROUP_INITDB })
  public void addUsersAndGroups() {
    UserGroup group = on(UserGroup.class);
    group.setName("ADMINS");
    group.setComment("all admins");
    group = group.persist();
    LOGGER.info("group {0} created", group);

    User user = on(User.class);
    user.setName("GONZO");
    user.setComment("Gonzo the Great");
    user.setLoginAllowed(true);
    user.setPasswordChangeable(true);
    user.setChangingPreferencesAllowed(true);
    user.setSystemPreferencesOnly(true);
    user.getUserGroups().add(group);
    user = user.persist();
    user.updatePasswordHash(mvnHelper.hash(new char[] {'g', 'o', 'n', 'z', 'o'}));

    user = on(User.class);
    user.setName("KERMIT");
    user.setComment("Kermit the Frog");
    user.setLoginAllowed(true);
    user.setPasswordChangeable(true);
    user.setChangingPreferencesAllowed(false);
    user.setSystemPreferencesOnly(true);
    user.getUserGroups().add(group);
    user = user.persist();
    user.updatePasswordHash(mvnHelper.hash(new char[] {'p', 'i', 'g', 'g', 'y'}));

    user = on(User.class);
    user.setName("DAEMON");
    user.setComment("The Daemon");
    user.setLoginAllowed(true);
    user.setSystemPreferencesOnly(true);
    user = user.persist();
    user.updatePasswordHash(mvnHelper.hash(new char[] {'d', 'a', 'e', 'm', 'o', 'n'}));

    LOGGER.info("users created");
  }

}
