/*
 * mvn generated by tentackle-project-archetype.
 */

package flipkart.domain.td;

import flipkart.pdo.MessageType;
import flipkart.pdo.md.OrgUnit;
import flipkart.pdo.td.Message;
import flipkart.pdo.td.persist.MessagePersistence;

import org.tentackle.common.Freezable;
import org.tentackle.common.Timestamp;
import org.tentackle.misc.TrackedList;
import org.tentackle.misc.TrackedArrayList;
import org.tentackle.pdo.DomainContext;
import org.tentackle.pdo.PersistentObjectService;
import org.tentackle.session.Session;
import org.tentackle.test.pdo.mock.MockPersistentObject;

/**
 * Sample persistence mock.
 */
@PersistentObjectService(Message.class)
public class MessagePersistenceMock extends MockPersistentObject<Message, MessagePersistenceMock> implements MessagePersistence {

  // @wurblet declare Declare --mock

  //<editor-fold defaultstate="collapsed" desc="code 'declare' generated by wurblet Declare">//GEN-BEGIN:declare


  /** message number. */
  private String messageNumber;

  /** timestamp of message. */
  private Timestamp when;

  /** the message type. */
  private MessageType messageType;

  /** class id if message refers to a PDO. */
  private Integer refersToClassId;

  /** object id if message refers to a PDO. */
  private Long refersToPdoId;

  /** refers text or toString of refersToPdo. */
  private String refersToText;

  /** ID of the responsible orgunit. */
  private Long orgUnitId;

  /** message text. */
  private String text;

  //</editor-fold>//GEN-END:declare


  //<editor-fold defaultstate="collapsed" desc="constructors">

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   * @param context the domain context
   */
  public MessagePersistenceMock(Message pdo, DomainContext context) {
    super(pdo, context);
  }

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   * @param session the session
   */
  public MessagePersistenceMock(Message pdo, Session session) {
    super(pdo, session);
  }

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   */
  public MessagePersistenceMock(Message pdo) {
    super(pdo);
  }

  /**
   * Creates a persistent object.
   */
  public MessagePersistenceMock() {
    super();
  }

  //</editor-fold>

  // @wurblet methods MethodsImpl --mock

  //<editor-fold defaultstate="collapsed" desc="code 'methods' generated by wurblet MethodsImpl">//GEN-BEGIN:methods


  @Override
  public String getMessageNumber()    {
    return messageNumber;
  }

  @Override
  public void setMessageNumber(String messageNumber) {
    this.messageNumber = messageNumber;
  }

  @Override
  public Timestamp getWhen()    {
    return when;
  }

  @Override
  public void setWhen(Timestamp when) {
    this.when = when;
    Timestamp.setUTC(when, false);
    Freezable.freeze(when);
  }

  @Override
  public MessageType getMessageType()    {
    return messageType;
  }

  @Override
  public void setMessageType(MessageType messageType) {
    this.messageType = messageType;
  }

  @Override
  public Integer getRefersToClassId()    {
    return refersToClassId;
  }

  @Override
  public void setRefersToClassId(Integer refersToClassId) {
    this.refersToClassId = refersToClassId;
  }

  @Override
  public Long getRefersToPdoId()    {
    return refersToPdoId;
  }

  @Override
  public void setRefersToPdoId(Long refersToPdoId) {
    this.refersToPdoId = refersToPdoId;
  }

  @Override
  public String getRefersToText()    {
    return refersToText;
  }

  @Override
  public void setRefersToText(String refersToText) {
    this.refersToText = refersToText;
  }

  @Override
  public Long getOrgUnitId()    {
    return orgUnitId;
  }

  @Override
  public void setOrgUnitId(Long orgUnitId) {
    this.orgUnitId = orgUnitId;
  }

  @Override
  public String getText()    {
    return text;
  }

  @Override
  public void setText(String text) {
    this.text = text;
  }

  //</editor-fold>//GEN-END:methods


  // @wurblet relations PdoRelations --mock

  //<editor-fold defaultstate="collapsed" desc="code 'relations' generated by wurblet PdoRelations">//GEN-BEGIN:relations


  // OrgUnit orgUnit via orgUnitId (OrgUnit)
  private OrgUnit<?> orgUnit;

  @Override
  @SuppressWarnings("unchecked")
  public OrgUnit<?> getOrgUnit()  {
    return orgUnit;
  }

  @Override
  public void setOrgUnit(OrgUnit<?> orgUnit)  {
    this.orgUnit = orgUnit;
  }

  //</editor-fold>//GEN-END:relations


  @Override
  public String nextMessageNumber() {
    return "1000";
  }

  @Override
  public Message selectByUniqueDomainKey(String messageNumber) {
    return null;
  }

  @Override
  public TrackedList<Message> findLatest(int limit, long id) {
    return new TrackedArrayList<>();
  }

  @Override
  public TrackedList<Message> findBy(
      String messageNumber,
      Timestamp from, Timestamp until,
      MessageType type,
      OrgUnit<?> orgUnit,
      String pattern) {
    return new TrackedArrayList<>();
  }

}
