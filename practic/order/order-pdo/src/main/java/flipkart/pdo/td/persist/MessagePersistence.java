/*
 * mvn generated by tentackle-project-archetype.
 */

package flipkart.pdo.td.persist;

import flipkart.pdo.MessageType;
import flipkart.pdo.md.OrgUnit;
import flipkart.pdo.td.Message;

import org.tentackle.bind.Bindable;
import org.tentackle.common.Timestamp;
import org.tentackle.misc.TrackedList;
import org.tentackle.pdo.DomainKey;
import org.tentackle.pdo.PersistentObject;
import org.tentackle.session.Persistent;
import org.tentackle.validate.validator.NotNull;

/**
 * Persistence interface for Message.
 */
public interface MessagePersistence extends PersistentObject<Message> {

  // @wurblet attributeNames AttributeNames

  //<editor-fold defaultstate="collapsed" desc="code 'attributeNames' generated by wurblet AttributeNames">//GEN-BEGIN:attributeNames


  /** relation name for 'OrgUnit orgUnit via orgUnitId (OrgUnit)'. */
  String RN_ORGUNIT = "orgUnit";

  /** attribute name for database column 'message_no'. */
  String AN_MESSAGENUMBER = "messageNumber";

  /** attribute name for database column 'mwhen'. */
  String AN_WHEN = "when";

  /** attribute name for database column 'mtype'. */
  String AN_MESSAGETYPE = "messageType";

  /** attribute name for database column 'ref_class_id'. */
  String AN_REFERSTOCLASSID = "refersToClassId";

  /** attribute name for database column 'ref_pdo_id'. */
  String AN_REFERSTOPDOID = "refersToPdoId";

  /** attribute name for database column 'ref_txt'. */
  String AN_REFERSTOTEXT = "refersToText";

  /** attribute name for database column 'orgunit_id'. */
  String AN_ORGUNITID = "orgUnitId";

  /** attribute name for database column 'mtext'. */
  String AN_TEXT = "text";

  //</editor-fold>//GEN-END:attributeNames


  // @wurblet columnLenghts ColumnLengths

  //<editor-fold defaultstate="collapsed" desc="code 'columnLenghts' generated by wurblet ColumnLengths">//GEN-BEGIN:columnLenghts


  /** maximum number of characters for 'messageNumber'. */
  int CL_MESSAGENUMBER = 10;

  /** maximum number of characters for 'messageType'. */
  int CL_MESSAGETYPE = 30;

  /** maximum number of characters for 'refersToText'. */
  int CL_REFERSTOTEXT = 30;

  /** maximum number of characters for 'text'. */
  int CL_TEXT = 1024;

  //</editor-fold>//GEN-END:columnLenghts


  // @wurblet methods Methods

  //<editor-fold defaultstate="collapsed" desc="code 'methods' generated by wurblet Methods">//GEN-BEGIN:methods


  /**
   * Gets the attribute messageNumber.
   *
   * @return message number
   */
  @Persistent(ordinal=2, comment="message number")
  @NotNull
  @Bindable(options="MAXCOLS=10")
  @DomainKey
  String getMessageNumber();

  /**
   * Sets the attribute messageNumber.
   *
   * @param messageNumber message number
   */
  @Bindable
  void setMessageNumber(String messageNumber);

  /**
   * Gets the attribute when.
   *
   * @return timestamp of message
   */
  @Persistent(ordinal=3, comment="timestamp of message")
  @NotNull
  @Bindable(options="AUTOSELECT")
  Timestamp getWhen();

  /**
   * Sets the attribute when.
   *
   * @param when timestamp of message
   */
  @Bindable
  void setWhen(Timestamp when);

  /**
   * Gets the attribute messageType.
   *
   * @return the message type
   */
  @Persistent(ordinal=4, comment="the message type")
  @NotNull
  @Bindable(options="MAXCOLS=30")
  MessageType getMessageType();

  /**
   * Sets the attribute messageType.
   *
   * @param messageType the message type
   */
  @Bindable
  void setMessageType(MessageType messageType);

  /**
   * Gets the attribute refersToClassId.
   *
   * @return class id if message refers to a PDO
   */
  @Persistent(ordinal=5, comment="class id if message refers to a PDO")
  @Bindable(options="AUTOSELECT")
  Integer getRefersToClassId();

  /**
   * Sets the attribute refersToClassId.
   *
   * @param refersToClassId class id if message refers to a PDO
   */
  @Bindable
  void setRefersToClassId(Integer refersToClassId);

  /**
   * Gets the attribute refersToPdoId.
   *
   * @return object id if message refers to a PDO
   */
  @Persistent(ordinal=6, comment="object id if message refers to a PDO")
  @Bindable(options="AUTOSELECT")
  Long getRefersToPdoId();

  /**
   * Sets the attribute refersToPdoId.
   *
   * @param refersToPdoId object id if message refers to a PDO
   */
  @Bindable
  void setRefersToPdoId(Long refersToPdoId);

  /**
   * Gets the attribute refersToText.
   *
   * @return refers text or toString of refersToPdo
   */
  @Persistent(ordinal=7, comment="refers text or toString of refersToPdo")
  @Bindable(options="MAXCOLS=30")
  String getRefersToText();

  /**
   * Sets the attribute refersToText.
   *
   * @param refersToText refers text or toString of refersToPdo
   */
  @Bindable
  void setRefersToText(String refersToText);

  /**
   * Gets the attribute orgUnitId.
   *
   * @return ID of the responsible orgunit
   */
  @Persistent(ordinal=8, comment="ID of the responsible orgunit")
  @Bindable(options="AUTOSELECT")
  Long getOrgUnitId();

  /**
   * Sets the attribute orgUnitId.
   *
   * @param orgUnitId ID of the responsible orgunit
   */
  @Bindable
  void setOrgUnitId(Long orgUnitId);

  /**
   * Gets the attribute text.
   *
   * @return message text
   */
  @Persistent(ordinal=9, comment="message text")
  @Bindable(options="MAXCOLS=1024")
  String getText();

  /**
   * Sets the attribute text.
   *
   * @param text message text
   */
  @Bindable
  void setText(String text);

  /**
   * Selects Message by its unique domain key.
   *
   * @param messageNumber message number
   * @return the Message, null if no such PDO
   */
  Message selectByUniqueDomainKey(String messageNumber);

  //</editor-fold>//GEN-END:methods


  // @wurblet relations Relations

  //<editor-fold defaultstate="collapsed" desc="code 'relations' generated by wurblet Relations">//GEN-BEGIN:relations


  /**
   * Gets OrgUnit orgUnit via orgUnitId (OrgUnit).
   *
   * @return orgUnit OrgUnit
   */
  @Bindable
  @Persistent(ordinal=0, comment="OrgUnit", component=false)
  OrgUnit<?> getOrgUnit();

  /**
   * Sets OrgUnit orgUnit via orgUnitId (OrgUnit).
   *
   * @param orgUnit OrgUnit
   */
  @Bindable(options="AUTOSELECT")
  void setOrgUnit(OrgUnit<?> orgUnit);

  //</editor-fold>//GEN-END:relations



  /**
   * Gets the next message number.
   *
   * @return the message number from the pool
   */
  String nextMessageNumber();


  /**
   * Finds the latest messages.
   *
   * @param limit the max. number of messages to retrieve, 0 if no limit
   * @param id the exlusive lower bound
   * @return the messages
   */
  TrackedList<Message> findLatest(int limit, long id);

  /**
   * Finds messages.
   *
   * @param messageNumber the message number
   * @param from timestamp from
   * @param until timestamp until
   * @param type the message category
   * @param orgUnit the orgunit
   * @param pattern the normtext pattern
   * @return the messages
   */
  TrackedList<Message> findBy(String messageNumber, Timestamp from, Timestamp until, MessageType type, OrgUnit<?> orgUnit, String pattern);

}
