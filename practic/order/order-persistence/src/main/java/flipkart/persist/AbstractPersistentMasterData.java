/*
 * mvn generated by tentackle-project-archetype.
 */

package flipkart.persist;

import flipkart.pdo.MasterData;

import org.tentackle.pdo.DomainContext;
import org.tentackle.persist.AbstractPersistentObject;
import org.tentackle.session.Session;

/**
 * Common persistence implementation for master data.
 */
public abstract class AbstractPersistentMasterData<T extends MasterData<T>, P extends AbstractPersistentMasterData<T,P>>
       extends AbstractPersistentObject<T,P> {

  private static final long serialVersionUID = 1L;

  //<editor-fold defaultstate="collapsed" desc="constructors">

  /**
   * Creates an application database object.
   *
   * @param pdo the persistent domain object this is a delegate for
   * @param context the database context
   */
  public AbstractPersistentMasterData(T pdo, DomainContext context) {
    super(pdo, context);
  }

  /**
   * Creates an application database object without a domain context
   * for a given connection.<p>
   * Note: the application must set the context.
   *
   * @param pdo the persistent domain object this is a delegate for
   * @param session the session (must be an instance of {@link Session}).
   */
  public AbstractPersistentMasterData(T pdo, Session session) {
    super(pdo, session);
  }

  /**
   * Creates an application database object without a database context.<p>
   * Note: the application must set the context.
   *
   * @param pdo the persistent domain object this is a delegate for
   */
  public AbstractPersistentMasterData(T pdo) {
    super(pdo);
  }

  /**
   * Creates an application database object without a database context.
   */
  public AbstractPersistentMasterData() {
    super();
  }

  //</editor-fold>

}

